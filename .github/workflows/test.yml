name: Push-to-EC2 instance

# Trigger deployment only on push to the main branch 
on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Push to EC2
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout the code
        uses: actions/checkout@v2  # Use v2 for better support

      # Step 2: Deploy to my EC2 instance
      - name: Deploy to my EC2 instance
        uses: easingthemes/ssh-deploy@v2.1.5
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          SOURCE: "./"
          REMOTE_HOST: ${{ secrets.HOST_DNS }}
          REMOTE_USER: ${{ secrets.USERNAME }}
          TARGET: /home/ec2-user/my-app  # Specify the target directory for your app

      # Step 3: Check if deployment was successful (optional)
      - name: Verify deployment directory
        run: |
          echo "Checking the directory where the app was deployed"
          ssh -i ${{ secrets.EC2_SSH_KEY }} ${{ secrets.USERNAME }}@${{ secrets.HOST_DNS }} "ls -la /home/ec2-user/my-app" 

      # Step 4: Execute remote SSH commands to install dependencies, build, and start the app
      - name: Executing remote ssh commands using ssh key
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_DNS }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Update and install dependencies
            sudo yum -y update
            sudo yum install -y httpd nodejs npm

            # Install PM2 for process management
            sudo npm install -g pm2

            # Navigate to the application directory
            cd /home/ec2-user/my-app  # Ensure this matches the TARGET directory

            # Install Node.js dependencies
            npm install

            # Build the Node.js application (adjust this if you don't need a build step)
            sudo npm run build

            # Start the Node.js application using PM2 (adjust app.js to your entry file)
            pm2 start app.js --name "express-app"

            # Set PM2 to auto-start on reboot
            pm2 startup
            pm2 save

            # Restart the Apache service if you're using it as a reverse proxy (optional)
            sudo systemctl restart httpd

            # Allow traffic on the application port (if needed)
            sudo firewall-cmd --zone=public --add-port=3000/tcp --permanent
            sudo firewall-cmd --reload
